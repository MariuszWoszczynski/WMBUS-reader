dashboard_import:
  package_import_url: github://MariuszWoszczynski/WMBUS-reader/WMBUS-reader.yaml@main
  import_full_config: true

substitutions:
  name: "wmbus-reader"
  friendly_name: "wmbus-reader"

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  project:
    name: esphome.wmbus_reader
    version: "1.0"
  # only for RPI 
#  compile_process_limit: 1
  
esp32:
  board: nodemcu-32s
  framework:
    type: arduino

external_components:
  - source: github://SzczepanLeon/esphome-components@3.2.3
    components: [ wmbus ]
    refresh: 0d

# Status LED for connection
status_led:
  pin:
    # Blue LED
    number: GPIO02
    
mdns:
  disabled: false
  
time:
 - platform: sntp
   id: time_sntp


# Enable logging
logger:
  level: debug

# Enable Home Assistant API
api:
  encryption:
    key: "9p2efbtoh/7izZ93LRVsgSXsL1JAoP07YQeoyATI7IE="

ota:
  - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  output_power: 18dB
#  static IP configuration (instead of data from the secret file)
#  manual_ip:
#    static_ip: 192.168.10.200
#    gateway: 192.168.10.1
#    subnet: 255.255.255.0
  
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "WMBUS Reader - Fallback Hotspot"
#    password: "password_12345678"

#your mqtt parameters
#mqtt:
#  broker: 10.10.10.10  
#  port: 1883
#  username: username 
#  password: password 

captive_portal:

web_server: 
  port: 80
  version: 3

wmbus:
  frequency: 868.950  #default
  sync_mode: False    #default
  log_unknown: true   #default

  mosi_pin: GPIO32
  clk_pin:  GPIO33 
  miso_pin: GPIO19
  gdo2_pin: GPIO21
  gdo0_pin: GPIO22
  cs_pin:   GPIO23


text_sensor: 
    #diagnostic info
  - platform: wifi_info                   
    ip_address:
      name: 'IP Address'
      icon: mdi:wifi
    ssid:
      name: 'Connected SSID'
      icon: mdi:wifi-strength-2

sensor:   
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"


 ############### The following sensors are examples. Adapt the sensors to the meters you have (according to the instructions) and remove the others.###############

# first sensor (water)
  - platform: wmbus
    meter_id: 0x00000000
    type: izar
    add_prefix: false
    lqi:
      name: "My lqi"
    rssi:
      name: "My RSSI"
    total_water_m3:
      name: "My cold water"
   #  filters:              #optional
   #    - offset: 123.4567  #the difference between the indications of the radio overlay and the counter (if you have a used overlay)
    last_month_total_water_m3:
      name: "Last month total water"
    current_month_total_water_l:
      name: "Current month total water"
    transmit_period_s:
      name: "Transmit period [s]"
    remaining_battery_life_y:
      name: "Remaining battery life [Y]"
    current_alarms:
      name: "Current alarms"
    previous_alarms:
      name: "Previous alarms"
  # second sensor (water)
  - platform: wmbus
    meter_id: 0x00000000
    type: apator162
    add_prefix: false
    key: "00000000000000000000000000000000"
    lqi:
      name: "My lqi"
    rssi:
      name: "My RSSI"
    total_water_m3:
      name: "My cold water"
  # third sensor (gas)
  - platform: wmbus
    meter_id: 0x00000000
    type: unismart
    add_prefix: false
    key: "00000000000000000000000000000000"
    lqi:
      name: "My lqi"
    rssi:
      name: "My RSSI"
    total_gas_m3:
      name: "My gas"
  # fourth sensor (electricity)
  - platform: wmbus
    meter_id: 0x00000000
    type: amiplus
    add_prefix: false
    mode: T1C1
    rssi:
      name: "My RSSI"
    total_energy_consumption_kwh:
      name: "My consumption in kWh"
      icon: "mdi:power-plug"
    current_power_consumption_kw:
      name: "My current power consumption in kW"
    total_energy_production_kwh:
      name: "My total energy production in kWh"
    current_power_production_kw:
      name: "My current power production in kW"
    voltage_at_phase_1_v:
      name: "My V1"
    voltage_at_phase_2_v:
      name: "My V2"
    voltage_at_phase_3_v:
      name: "My V3"
  # more options on https://github.com/SzczepanLeon/esphome-components
